// <auto-generated />
using System;
using Domian.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Domian.Migrations
{
    [DbContext(typeof(HotelRusBookingContext))]
    [Migration("20241225190133_HotelRusBookingContextRu")]
    partial class HotelRusBookingContextRu
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Domian.Models.Admin", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AdminID");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("AdminId");

                    b.HasIndex(new[] { "Username" }, "UQ__Admins__536C85E4B363BEDF")
                        .IsUnique();

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("Domian.Models.Amenity", b =>
                {
                    b.Property<int>("AmenityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AmenityID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AmenityId"), 1L, 1);

                    b.Property<string>("AmenityName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("AmenityId");

                    b.ToTable("Amenities");
                });

            modelBuilder.Entity("Domian.Models.BookedOffer", b =>
                {
                    b.Property<int>("BookedOfferId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BookedOfferID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookedOfferId"), 1L, 1);

                    b.Property<int?>("BookingId")
                        .HasColumnType("int")
                        .HasColumnName("BookingID");

                    b.Property<int?>("OfferId")
                        .HasColumnType("int")
                        .HasColumnName("OfferID");

                    b.HasKey("BookedOfferId");

                    b.HasIndex("BookingId");

                    b.HasIndex("OfferId");

                    b.ToTable("BookedOffers");
                });

            modelBuilder.Entity("Domian.Models.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BookingID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingId"), 1L, 1);

                    b.Property<DateTime?>("BookingDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("CheckInDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("CheckOutDate")
                        .HasColumnType("date");

                    b.Property<byte?>("NumberOfGuests")
                        .HasColumnType("tinyint");

                    b.Property<int?>("RoomId")
                        .HasColumnType("int")
                        .HasColumnName("RoomID");

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("decimal(8,2)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("BookingId");

                    b.HasIndex("RoomId");

                    b.HasIndex("UserId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("Domian.Models.BookingStatus", b =>
                {
                    b.Property<int>("BookingStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BookingStatusID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingStatusId"), 1L, 1);

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("BookingStatusId");

                    b.ToTable("BookingStatuses");
                });

            modelBuilder.Entity("Domian.Models.BookingStatusHistory", b =>
                {
                    b.Property<int>("BookingStatusHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BookingStatusHistoryID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingStatusHistoryId"), 1L, 1);

                    b.Property<int?>("BookingId")
                        .HasColumnType("int")
                        .HasColumnName("BookingID");

                    b.Property<int?>("BookingStatusId")
                        .HasColumnType("int")
                        .HasColumnName("BookingStatusID");

                    b.Property<DateTime?>("StatusChangeDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("BookingStatusHistoryId");

                    b.HasIndex("BookingId");

                    b.HasIndex("BookingStatusId");

                    b.ToTable("BookingStatusHistory", (string)null);
                });

            modelBuilder.Entity("Domian.Models.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CityID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CityId"), 1L, 1);

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("RegionId")
                        .HasColumnType("int")
                        .HasColumnName("RegionID");

                    b.HasKey("CityId");

                    b.HasIndex("RegionId");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("Domian.Models.Hotel", b =>
                {
                    b.Property<int>("HotelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("HotelID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HotelId"), 1L, 1);

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("CityId")
                        .HasColumnType("int")
                        .HasColumnName("CityID");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("HotelName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<decimal?>("Latitude")
                        .HasColumnType("decimal(9,6)");

                    b.Property<decimal?>("Longitude")
                        .HasColumnType("decimal(9,6)");

                    b.Property<byte?>("Stars")
                        .HasColumnType("tinyint");

                    b.HasKey("HotelId");

                    b.HasIndex("CityId");

                    b.ToTable("Hotels");
                });

            modelBuilder.Entity("Domian.Models.HotelPhoto", b =>
                {
                    b.Property<int>("PhotoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PhotoID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PhotoId"), 1L, 1);

                    b.Property<int?>("HotelId")
                        .HasColumnType("int")
                        .HasColumnName("HotelID");

                    b.Property<string>("PhotoUrl")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("PhotoURL");

                    b.HasKey("PhotoId")
                        .HasName("PK__HotelPho__21B7B5826CAD174D");

                    b.HasIndex("HotelId");

                    b.ToTable("HotelPhotos");
                });

            modelBuilder.Entity("Domian.Models.Log", b =>
                {
                    b.Property<int>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LogID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LogId"), 1L, 1);

                    b.Property<int>("AdminId")
                        .HasColumnType("int")
                        .HasColumnName("AdminID");

                    b.HasKey("LogId");

                    b.HasIndex("AdminId");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("Domian.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PaymentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"), 1L, 1);

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(8,2)");

                    b.Property<int?>("BookingId")
                        .HasColumnType("int")
                        .HasColumnName("BookingID");

                    b.Property<DateTime?>("PaymentDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("PaymentMethodId")
                        .HasColumnType("int")
                        .HasColumnName("PaymentMethodID");

                    b.HasKey("PaymentId");

                    b.HasIndex("BookingId");

                    b.HasIndex("PaymentMethodId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("Domian.Models.PaymentMethod", b =>
                {
                    b.Property<int>("PaymentMethodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PaymentMethodID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentMethodId"), 1L, 1);

                    b.Property<string>("MethodName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("PaymentMethodId");

                    b.ToTable("PaymentMethods");
                });

            modelBuilder.Entity("Domian.Models.Region", b =>
                {
                    b.Property<int>("RegionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RegionID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RegionId"), 1L, 1);

                    b.Property<string>("RegionName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("RegionId");

                    b.ToTable("Regions");
                });

            modelBuilder.Entity("Domian.Models.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ReviewID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReviewId"), 1L, 1);

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<int?>("HotelId")
                        .HasColumnType("int")
                        .HasColumnName("HotelID");

                    b.Property<byte?>("Rating")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("ReviewDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("ReviewId");

                    b.HasIndex("HotelId");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("Domian.Models.Room", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RoomID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomId"), 1L, 1);

                    b.Property<byte?>("Capacity")
                        .HasColumnType("tinyint");

                    b.Property<int?>("HotelId")
                        .HasColumnType("int")
                        .HasColumnName("HotelID");

                    b.Property<decimal?>("PricePerNight")
                        .HasColumnType("decimal(8,2)");

                    b.Property<string>("RoomNumber")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<int?>("RoomTypeId")
                        .HasColumnType("int")
                        .HasColumnName("RoomTypeID");

                    b.HasKey("RoomId");

                    b.HasIndex("HotelId");

                    b.HasIndex("RoomTypeId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("Domian.Models.RoomType", b =>
                {
                    b.Property<int>("RoomTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RoomTypeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomTypeId"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("RoomTypeId");

                    b.ToTable("RoomTypes");
                });

            modelBuilder.Entity("Domian.Models.SpecialOffer", b =>
                {
                    b.Property<int>("OfferId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OfferID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OfferId"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int?>("DiscountPercentage")
                        .HasColumnType("int");

                    b.Property<int?>("HotelId")
                        .HasColumnType("int")
                        .HasColumnName("HotelID");

                    b.Property<string>("OfferName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("date");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("date");

                    b.HasKey("OfferId")
                        .HasName("PK__SpecialO__8EBCF0B1D7AC5783");

                    b.HasIndex("HotelId");

                    b.ToTable("SpecialOffers");
                });

            modelBuilder.Entity("Domian.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LastName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("UserId");

                    b.HasIndex(new[] { "Email" }, "UQ__Users__A9D105340FE1288F")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FavoriteHotel", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.Property<int>("HotelId")
                        .HasColumnType("int")
                        .HasColumnName("HotelID");

                    b.HasKey("UserId", "HotelId")
                        .HasName("PK__Favorite__F3E8EF17E2CECAFA");

                    b.HasIndex("HotelId");

                    b.ToTable("FavoriteHotels", (string)null);
                });

            modelBuilder.Entity("HotelAmenity", b =>
                {
                    b.Property<int>("HotelId")
                        .HasColumnType("int")
                        .HasColumnName("HotelID");

                    b.Property<int>("AmenityId")
                        .HasColumnType("int")
                        .HasColumnName("AmenityID");

                    b.HasKey("HotelId", "AmenityId")
                        .HasName("PK__HotelAme__EE4094EDF8EC779F");

                    b.HasIndex("AmenityId");

                    b.ToTable("HotelAmenities", (string)null);
                });

            modelBuilder.Entity("Domian.Models.Admin", b =>
                {
                    b.HasOne("Domian.Models.Booking", "AdminNavigation")
                        .WithOne("Admin")
                        .HasForeignKey("Domian.Models.Admin", "AdminId")
                        .IsRequired()
                        .HasConstraintName("FK__Admins__Password__72C60C4A");

                    b.Navigation("AdminNavigation");
                });

            modelBuilder.Entity("Domian.Models.BookedOffer", b =>
                {
                    b.HasOne("Domian.Models.Booking", "Booking")
                        .WithMany("BookedOffers")
                        .HasForeignKey("BookingId")
                        .HasConstraintName("FK__BookedOff__Booki__6A30C649");

                    b.HasOne("Domian.Models.SpecialOffer", "Offer")
                        .WithMany("BookedOffers")
                        .HasForeignKey("OfferId")
                        .HasConstraintName("FK__BookedOff__Offer__6B24EA82");

                    b.Navigation("Booking");

                    b.Navigation("Offer");
                });

            modelBuilder.Entity("Domian.Models.Booking", b =>
                {
                    b.HasOne("Domian.Models.Room", "Room")
                        .WithMany("Bookings")
                        .HasForeignKey("RoomId")
                        .HasConstraintName("FK__Bookings__RoomID__4F7CD00D");

                    b.HasOne("Domian.Models.User", "User")
                        .WithMany("Bookings")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Bookings__UserID__4E88ABD4");

                    b.Navigation("Room");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domian.Models.BookingStatusHistory", b =>
                {
                    b.HasOne("Domian.Models.Booking", "Booking")
                        .WithMany("BookingStatusHistories")
                        .HasForeignKey("BookingId")
                        .HasConstraintName("FK__BookingSt__Booki__5535A963");

                    b.HasOne("Domian.Models.BookingStatus", "BookingStatus")
                        .WithMany("BookingStatusHistories")
                        .HasForeignKey("BookingStatusId")
                        .HasConstraintName("FK__BookingSt__Booki__5629CD9C");

                    b.Navigation("Booking");

                    b.Navigation("BookingStatus");
                });

            modelBuilder.Entity("Domian.Models.City", b =>
                {
                    b.HasOne("Domian.Models.Region", "Region")
                        .WithMany("Cities")
                        .HasForeignKey("RegionId")
                        .HasConstraintName("FK__Cities__RegionID__398D8EEE");

                    b.Navigation("Region");
                });

            modelBuilder.Entity("Domian.Models.Hotel", b =>
                {
                    b.HasOne("Domian.Models.City", "City")
                        .WithMany("Hotels")
                        .HasForeignKey("CityId")
                        .HasConstraintName("FK__Hotels__CityID__3C69FB99");

                    b.Navigation("City");
                });

            modelBuilder.Entity("Domian.Models.HotelPhoto", b =>
                {
                    b.HasOne("Domian.Models.Hotel", "Hotel")
                        .WithMany("HotelPhotos")
                        .HasForeignKey("HotelId")
                        .HasConstraintName("FK__HotelPhot__Hotel__5DCAEF64");

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("Domian.Models.Log", b =>
                {
                    b.HasOne("Domian.Models.Admin", "Admin")
                        .WithMany("Logs")
                        .HasForeignKey("AdminId")
                        .IsRequired()
                        .HasConstraintName("FK__Logs__AdminID__75A278F5");

                    b.Navigation("Admin");
                });

            modelBuilder.Entity("Domian.Models.Payment", b =>
                {
                    b.HasOne("Domian.Models.Booking", "Booking")
                        .WithMany("Payments")
                        .HasForeignKey("BookingId")
                        .HasConstraintName("FK__Payments__Bookin__6383C8BA");

                    b.HasOne("Domian.Models.PaymentMethod", "PaymentMethod")
                        .WithMany("Payments")
                        .HasForeignKey("PaymentMethodId")
                        .HasConstraintName("FK__Payments__Paymen__6477ECF3");

                    b.Navigation("Booking");

                    b.Navigation("PaymentMethod");
                });

            modelBuilder.Entity("Domian.Models.Review", b =>
                {
                    b.HasOne("Domian.Models.Hotel", "Hotel")
                        .WithMany("Reviews")
                        .HasForeignKey("HotelId")
                        .HasConstraintName("FK__Reviews__HotelID__5AEE82B9");

                    b.HasOne("Domian.Models.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Reviews__UserID__59FA5E80");

                    b.Navigation("Hotel");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domian.Models.Room", b =>
                {
                    b.HasOne("Domian.Models.Hotel", "Hotel")
                        .WithMany("Rooms")
                        .HasForeignKey("HotelId")
                        .HasConstraintName("FK__Rooms__HotelID__412EB0B6");

                    b.HasOne("Domian.Models.RoomType", "RoomType")
                        .WithMany("Rooms")
                        .HasForeignKey("RoomTypeId")
                        .HasConstraintName("FK__Rooms__RoomTypeI__4222D4EF");

                    b.Navigation("Hotel");

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("Domian.Models.SpecialOffer", b =>
                {
                    b.HasOne("Domian.Models.Hotel", "Hotel")
                        .WithMany("SpecialOffers")
                        .HasForeignKey("HotelId")
                        .HasConstraintName("FK__SpecialOf__Hotel__6754599E");

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("FavoriteHotel", b =>
                {
                    b.HasOne("Domian.Models.Hotel", null)
                        .WithMany()
                        .HasForeignKey("HotelId")
                        .IsRequired()
                        .HasConstraintName("FK__FavoriteH__Hotel__6EF57B66");

                    b.HasOne("Domian.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__FavoriteH__UserI__6E01572D");
                });

            modelBuilder.Entity("HotelAmenity", b =>
                {
                    b.HasOne("Domian.Models.Amenity", null)
                        .WithMany()
                        .HasForeignKey("AmenityId")
                        .IsRequired()
                        .HasConstraintName("FK__HotelAmen__Ameni__47DBAE45");

                    b.HasOne("Domian.Models.Hotel", null)
                        .WithMany()
                        .HasForeignKey("HotelId")
                        .IsRequired()
                        .HasConstraintName("FK__HotelAmen__Hotel__46E78A0C");
                });

            modelBuilder.Entity("Domian.Models.Admin", b =>
                {
                    b.Navigation("Logs");
                });

            modelBuilder.Entity("Domian.Models.Booking", b =>
                {
                    b.Navigation("Admin");

                    b.Navigation("BookedOffers");

                    b.Navigation("BookingStatusHistories");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("Domian.Models.BookingStatus", b =>
                {
                    b.Navigation("BookingStatusHistories");
                });

            modelBuilder.Entity("Domian.Models.City", b =>
                {
                    b.Navigation("Hotels");
                });

            modelBuilder.Entity("Domian.Models.Hotel", b =>
                {
                    b.Navigation("HotelPhotos");

                    b.Navigation("Reviews");

                    b.Navigation("Rooms");

                    b.Navigation("SpecialOffers");
                });

            modelBuilder.Entity("Domian.Models.PaymentMethod", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("Domian.Models.Region", b =>
                {
                    b.Navigation("Cities");
                });

            modelBuilder.Entity("Domian.Models.Room", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("Domian.Models.RoomType", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("Domian.Models.SpecialOffer", b =>
                {
                    b.Navigation("BookedOffers");
                });

            modelBuilder.Entity("Domian.Models.User", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
